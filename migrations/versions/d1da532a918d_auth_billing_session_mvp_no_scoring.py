"""
Revision ID: d1da532a918d
Revises: 0003_soft_delete_and_constraints
Create Date: 2025-08-12 13:47:34.078191
"""

from alembic import op
import sqlalchemy as sa

from sqlalchemy.dialects import postgresql

revision = 'd1da532a918d'
down_revision = '0003_soft_delete_and_constraints'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('payment_attempts',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('provider', sa.String(length=20), nullable=False),
    sa.Column('stripe_payment_intent_id', sa.String(length=100), nullable=True),
    sa.Column('amount_cents', sa.Integer(), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('status', sa.String(length=30), nullable=False),
    sa.Column('error_code', sa.String(length=100), nullable=True),
    sa.Column('error_message', sa.String(length=400), nullable=True),
    sa.Column('extra', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_attempts_stripe_payment_intent_id'), 'payment_attempts', ['stripe_payment_intent_id'], unique=False)
    op.create_index(op.f('ix_payment_attempts_user_id'), 'payment_attempts', ['user_id'], unique=False)
    op.create_table('sessions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('user_agent', sa.String(length=400), nullable=True),
    sa.Column('ip_address', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_seen_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sessions_created_at'), 'sessions', ['created_at'], unique=False)
    op.create_index(op.f('ix_sessions_last_seen_at'), 'sessions', ['last_seen_at'], unique=False)
    op.create_index(op.f('ix_sessions_user_id'), 'sessions', ['user_id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('provider', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=30), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(length=100), nullable=True),
    sa.Column('stripe_price_id', sa.String(length=100), nullable=True),
    sa.Column('current_period_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('current_period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancel_at_period_end', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscriptions_stripe_subscription_id'), 'subscriptions', ['stripe_subscription_id'], unique=False)
    op.create_index(op.f('ix_subscriptions_user_id'), 'subscriptions', ['user_id'], unique=False)
    op.alter_column('articles', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('articles', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.add_column('generations', sa.Column('persona', sa.String(length=50), nullable=True))
    op.add_column('generations', sa.Column('tone', sa.String(length=50), nullable=True))
    op.add_column('generations', sa.Column('tokens_used', sa.Integer(), nullable=True))
    op.alter_column('generations', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('generations', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_generations_article_id'), 'generations', ['article_id'], unique=False)
    op.create_index(op.f('ix_generations_user_id'), 'generations', ['user_id'], unique=False)
    op.drop_column('generations', 'score')
    op.drop_column('generations', 'score_breakdown')
    op.add_column('users', sa.Column('password_hash', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('email_verified_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), nullable=False))
    op.add_column('users', sa.Column('oauth_provider', sa.String(length=20), nullable=True))
    op.add_column('users', sa.Column('oauth_sub', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('last_seen_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('users', sa.Column('plan_started_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('users', sa.Column('plan_renews_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('users', sa.Column('quota_claude_monthly', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('quota_gpt_monthly', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('quota_claude_used', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('quota_gpt_used', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('stripe_customer_id', sa.String(length=100), nullable=True))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_users_oauth_provider'), 'users', ['oauth_provider'], unique=False)
    op.create_index(op.f('ix_users_oauth_sub'), 'users', ['oauth_sub'], unique=False)
    op.create_index(op.f('ix_users_stripe_customer_id'), 'users', ['stripe_customer_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_stripe_customer_id'), table_name='users')
    op.drop_index(op.f('ix_users_oauth_sub'), table_name='users')
    op.drop_index(op.f('ix_users_oauth_provider'), table_name='users')
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('users', 'stripe_customer_id')
    op.drop_column('users', 'quota_gpt_used')
    op.drop_column('users', 'quota_claude_used')
    op.drop_column('users', 'quota_gpt_monthly')
    op.drop_column('users', 'quota_claude_monthly')
    op.drop_column('users', 'plan_renews_at')
    op.drop_column('users', 'plan_started_at')
    op.drop_column('users', 'last_seen_at')
    op.drop_column('users', 'oauth_sub')
    op.drop_column('users', 'oauth_provider')
    op.drop_column('users', 'is_admin')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'email_verified_at')
    op.drop_column('users', 'password_hash')
    op.add_column('generations', sa.Column('score_breakdown', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.add_column('generations', sa.Column('score', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_generations_user_id'), table_name='generations')
    op.drop_index(op.f('ix_generations_article_id'), table_name='generations')
    op.alter_column('generations', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('generations', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('generations', 'tokens_used')
    op.drop_column('generations', 'tone')
    op.drop_column('generations', 'persona')
    op.alter_column('articles', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('articles', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('ix_subscriptions_user_id'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_stripe_subscription_id'), table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_sessions_user_id'), table_name='sessions')
    op.drop_index(op.f('ix_sessions_last_seen_at'), table_name='sessions')
    op.drop_index(op.f('ix_sessions_created_at'), table_name='sessions')
    op.drop_table('sessions')
    op.drop_index(op.f('ix_payment_attempts_user_id'), table_name='payment_attempts')
    op.drop_index(op.f('ix_payment_attempts_stripe_payment_intent_id'), table_name='payment_attempts')
    op.drop_table('payment_attempts')
    # ### end Alembic commands ###

